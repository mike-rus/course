def fileList
def filenum
node {
    stage('Clone repository') {
        // Fetch changes from the remote repository
        checkout scm
    }
    stage('List files') {
        // Get a list of files in the current directory and print them
        filenum = sh(script: "ls | wc -l", returnStdout: true).trim() // Get a count of the files
        fileList = sh(script: "ls", returnStdout: true).trim().split('\n') // Get a list of files
        echo "Number of files: ${filenum}" // Print the count of the files
        echo "${fileList.collect{ "'${it}'" }.join(', ')}"
        
    }
}
properties([
    parameters([
        [$class: 'CascadeChoiceParameter', 
            choiceType: 'PT_RADIO',
            description: 'Select a choice',
            name: 'Param_heram',
            referencedParameters: 'FILES_NUM',
            script: [$class: 'GroovyScript',
                script: [
                    classpath: [], 
                    sandbox: true, 
                    script: """
                        def fileList = "${fileList}"
                        return fileList.tokenize().toList()
                        
                    """
                ]
            ]
        ]
    ])
])
pipeline {
    agent any
    parameters {
        string(
            name: 'FILES_NUM',
            defaultValue: "${filenum.toString()}",
            description: 'Enter number of files to process'
        )
    }
    stages {
        stage('Clone repository') {
            steps {
                echo "Number of files to process: ${params.FILES_NUM}"
            }
        }
        // other stages go here
    }
}